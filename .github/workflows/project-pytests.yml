name: project-pytests

on:
  push:
    branches: ["main"]

jobs:
  greet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install CUDA
        uses: Jimver/cuda-toolkit@v0.2.23
        with:
          cuda: 12.8.1
          sub-packages: '["nvcc"]'
          method: "network"

      - name: Setup system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            python3-venv \
            python3-pip \
            git pybind11-dev python3-pybind11 libboost-all-dev

      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: ">=3.11"

      - name: Install Google Benchmarks
        run: |
          git clone https://github.com/google/benchmark.git
          cd benchmark
          cmake -E make_directory "build"
          cmake -E chdir "build" cmake -DBENCHMARK_DOWNLOAD_DEPENDENCIES=on -DCMAKE_BUILD_TYPE=Release ../
          cmake --build "build" --config Release
          sudo cmake --build "build" --config Release --target install
          cd ..

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=$HOME/.local/bin:\$PATH" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: |
          python -m venv .venv
          poetry env use python
          poetry lock
          poetry install

      - name: Build CMake project
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug

      - name: Build lamppp module
        run: cmake --build build --target lamppp --parallel

      - name: Add build dir to PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE/build:\$PYTHONPATH" >> $GITHUB_ENV

      - name: Run tests
        run: poetry run pytest tests/pytorch_stress_test.py

      - name: Upload lamppp wheel/so
        uses: actions/upload-artifact@v4
        with:
          name: lamppp-module
          path: build/lamppp*.so
name: project-pytests

on:
  push:
    branches: ["main"]
jobs:
  greet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install CUDA
        uses: Jimver/cuda-toolkit@v0.2.23
        with:
          cuda: 12.8.1
          sub-packages: '["nvcc"]'
          method: "network"

      - name: Setup system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            python3-venv \
            python3-pip \
            git pybind11-dev python3-pybind11 libboost-all-dev

      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: ">=3.11"

      - name: Install Google Benchmarks
        run: |
          git clone https://github.com/google/benchmark.git
          cd benchmark
          cmake -E make_directory "build"
          cmake -E chdir "build" cmake -DBENCHMARK_DOWNLOAD_DEPENDENCIES=on -DCMAKE_BUILD_TYPE=Release ../
          cmake --build "build" --config Release
          sudo cmake --build "build" --config Release --target install
          cd ..

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=$HOME/.local/bin:\$PATH" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: |
          python -m venv .venv
          poetry env use python
          poetry lock
          poetry install

      - name: Build CMake project
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug

      - name: Build lamppp module
        run: cmake --build build --target lamppp --parallel

      - name: Add build dir to PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE/build:\$PYTHONPATH" >> $GITHUB_ENV

      - name: Run tests
        run: poetry run pytest tests/pytorch_stress_test.py

      - name: Upload lamppp wheel/so
        uses: actions/upload-artifact@v4
        with:
          name: lamppp-module
          path: build/lamppp*.so
